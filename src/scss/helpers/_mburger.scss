// mburger CSS v1.3.3
// mmenujs.com/mburger

/** Selector for the root */
$mb_root: ':root' !default;

/** Selector for the button. */
$mb_module: '.mburger' !default;

$__opened: '.mm-wrapper_opened';

/** Selector for the button with the "collapse" effect. */
$mb_module_collapse: '#{$mb_module}--collapse' !default;

/** Selector for the button with the "spin" effect. */
$mb_module_spin: '#{$mb_module}--spin' !default;

/** Selector for the button with the "squeeze" effect. */
$mb_module_squeeze: '#{$mb_module}--squeeze' !default;

/** Selector for the button with the "tornado" effect. */
$mb_module_tornado: '#{$mb_module}--tornado' !default;

/** Selector for the button when the menu is opened. */
$mb_module_cross: '#{$__opened} #{$mb_module}' !default;

/** Selector for the button with the "collapse" effect when the menu is opened. */
$mb_module_collapse_cross: '#{$__opened} #{$mb_module_collapse}' !default;

/** Selector for the button with the "spin" effect when the menu is opened. */
$mb_module_spin_cross: '#{$__opened} #{$mb_module_spin}' !default;

/** Selector for the button with the "squeeze" effect when the menu is opened. */
$mb_module_squeeze_cross: '#{$__opened} #{$mb_module_squeeze}' !default;

/** Selector for the button with the "tornado" effect when the menu is opened. */
$mb_module_tornado_cross: '#{$__opened} #{$mb_module_tornado}' !default;

/** Timeout before starting the animation, ensures the animation starts after the menu is fully opened. */
$mb_animate_timeout: 0.4s !default;

/** Whether or not to include the CSS for the "collapse" animation. */
$mb_fx_collapse: true !default;

/** Whether or not to include the CSS for the "spin" animation. */
$mb_fx_spin: true !default;

/** Whether or not to include the CSS for the "squeeze" animation. */
$mb_fx_squeeze: true !default;

/** Whether or not to include the CSS for the "tornado" animation. */
$mb_fx_tornado: true !default;

#{$mb_root} {
  /** Size for the button. */
  --mb-button-size: 60px;

  /** Width for the bars, relative to the button. */
  --mb-bar-width: 0.6;

  /** Height for the bars.*/
  --mb-bar-height: 4px;

  /** Distance between bars (approximately). */
  --mb-bar-spacing: 10px;

  /** Timeout before starting the animation, ensures the animation starts after the menu is fully opened. */
  --mb-animate-timeout: #{$mb_animate_timeout};
}

#{$mb_module} {
  //	Overridable values
  background: transparent;
  border: none;
  border-radius: 0;
  color: inherit;

  //	Button
  display: inline-block;
  position: relative;
  box-sizing: border-box;
  height: var(--mb-button-size);
  padding: 0 0 0 var(--mb-button-size);
  margin: 0;
  line-height: var(--mb-button-size);
  vertical-align: middle;
  appearance: none;
  outline: none;
  cursor: pointer;

  //	Hamburger
  b {
    display: block;
    position: absolute;
    left: calc(var(--mb-button-size) * ((1 - var(--mb-bar-width)) / 2));
    width: calc(var(--mb-button-size) * var(--mb-bar-width));
    height: var(--mb-bar-height);
    border-radius: calc(var(--mb-bar-height) / 2);
    background: currentColor;
    color: inherit;
    opacity: 1;

    //	Bar 1
    &:nth-of-type(1) {
      bottom: calc(50% + var(--mb-bar-spacing));
      transition: bottom 0.2s ease, transform 0.2s ease, width 0.2s ease;
    }

    //	Bar 2
    &:nth-of-type(2) {
      top: calc(50% - (var(--mb-bar-height) / 2));
      transition: opacity 0.2s ease;
    }

    //	Bar 3
    &:nth-of-type(3) {
      top: calc(50% + var(--mb-bar-spacing));
      transition: top 0.2s ease, transform 0.2s ease, width 0.2s ease;
    }
  }
}

//	Cross
#{$mb_module_cross} {
  b {
    &:nth-of-type(1) {
      bottom: calc(50% - (var(--mb-bar-height) / 2));
      transform: rotate(45deg);
    }
    &:nth-of-type(2) {
      opacity: 0;
    }
    &:nth-of-type(3) {
      top: calc(50% - (var(--mb-bar-height) / 2));
      transform: rotate(-45deg);
    }
  }
}

@if ($mb_fx_squeeze) {
  //	Hamburger
  #{$mb_module_squeeze} {
    b {
      &:nth-of-type(1) {
        transition-delay: 0.1s, 0s;
      }
      &:nth-of-type(2) {
        transition-delay: 0.1s;
      }
      &:nth-of-type(3) {
        transition-delay: 0.1s, 0s;
      }
    }
  }

  //	Cross
  #{$mb_module_squeeze_cross} {
    b {
      &:nth-of-type(1) {
        transition-delay: calc(var(--mb-animate-timeout) + 0s),
        calc(var(--mb-animate-timeout) + 0.1s);
      }
      &:nth-of-type(2) {
        transition-delay: calc(var(--mb-animate-timeout) + 0s);
      }
      &:nth-of-type(3) {
        transition-delay: calc(var(--mb-animate-timeout) + 0s),
        calc(var(--mb-animate-timeout) + 0.1s);
      }
    }
  }
}
// /mburger